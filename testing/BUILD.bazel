load("@io_bazel_rules_go//go:def.bzl", "go_test")
load("//bzl:rules.bzl", "bazel_lint")
load("//py:rules.bzl", "py_test")
load("//ts:rules.bzl", "jest_test", "ts_project")

go_test(
    name = "go_basic_test",
    srcs = ["go_basic_test.go"],
)

py_test(
    name = "python_basic_test",
    srcs = ["python_basic_test.py"],
)

ts_project(
    name = "typescript_basic_test_js",
    srcs = ["typescript_basic_test.ts"],
    preserve_jsx = False,
    deps = [
        "//:node_modules/@jest/globals",
        "//:node_modules/@types/jest",
        "//:node_modules/@types/node",
    ],
)

jest_test(
    name = "typescript_basic_test",
    srcs = ["typescript_basic_test.js"],
)

go_test(
    name = "testing_test",
    srcs = ["go_basic_test.go"],
)

sh_test(
    name = "pnpm_lockfile_validation_fail_test",
    srcs = ["pnpm_lockfile_validation/test_fail.sh"],
    data = [
        "//:package.json",
        "//:pnpm-lock.yaml",
        "//:pnpm_lockfile_validation_bin",
        "//sh/bin:gojq",
    ],
    env = {
        "PACKAGE_JSON": "$(rlocationpath //:package.json)",
        "PNPM_LOCKFILE": "$(rlocationpath //:pnpm-lock.yaml)",
        "VALIDATION_BIN": "$(rlocationpath //:pnpm_lockfile_validation_bin)",
        "GOJQ_BINARY": "$(rlocationpath //sh/bin:gojq)",
    },
    deps = ["@bazel_tools//tools/bash/runfiles"],
)

bazel_lint(
    name = "bazel_lint",
    srcs = ["BUILD.bazel"],
)
