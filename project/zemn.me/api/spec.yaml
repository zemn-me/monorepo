openapi: 3.0.4
info:
  title: zemn.me API
  version: 0.0.0

servers:
  - url: https://api.zemn.me
    description: Production
  - url: http://api.staging.zemn.me
    description: Staging

components:
  securitySchemes:
    googleOIDC:
      type: openIdConnect
      openIdConnectUrl: "https://accounts.google.com/.well-known/openid-configuration"
  schemas:


    OAuthTokenTypeURI:
      type: string
      description: >
        A URI identifying the type of token. Standard values are defined in RFC 8693,
        but additional URIs may be used.
      enum:
        - urn:ietf:params:oauth:token-type:access_token
        - urn:ietf:params:oauth:token-type:refresh_token
        - urn:ietf:params:oauth:token-type:id_token
        - urn:ietf:params:oauth:token-type:saml1
        - urn:ietf:params:oauth:token-type:saml2
        - urn:ietf:params:oauth:token-type:jwt
      example: urn:ietf:params:oauth:token-type:jwt


    TokenExchangeRequest:
      type: object
      description: >
        Request body schema for an OAuth 2.0 Token Exchange request as defined in RFC 8693.
        The client submits this form-encoded payload to the token endpoint.
      required:
        - grant_type
        - subject_token
        - subject_token_type
      properties:
        grant_type:
          type: string
          enum: [urn:ietf:params:oauth:grant-type:token-exchange]
          description: MUST be the token exchange grant type URI.
        resource:
          type: string
          format: uri
          description: >
            A URI for the target resource where the issued token will be used.
        audience:
          type: string
          description: >
            Logical name of the target service. Interpretation depends on local agreement.
        scope:
          type: string
          description: >
            Space-delimited string of requested access scopes.
        requested_token_type:
          type: string
          description: >
            URI identifying the requested type of the issued token (e.g. access_token, jwt).
        subject_token:
          $ref: "#/components/schemas/OAuthTokenTypeURI"
          description: >
            The token representing the subject (user or entity) on whose behalf the request is made.
        subject_token_type:
          $ref: "#/components/schemas/OAuthTokenTypeURI"
          description: >
            URI indicating the type of subject_token, e.g.
            urn:ietf:params:oauth:token-type:access_token
        actor_token:
          type: string
          description: >
            (Optional) A token representing the actor (delegating party).
        actor_token_type:
          type: string
          description: >
            The type of the actor_token. REQUIRED if actor_token is present.

    TokenExchangeResponse:
      type: object
      description: >
        Standard OAuth 2.0 response for a successful token exchange. This includes the new token and metadata.
      required:
        - access_token
        - issued_token_type
        - token_type
      properties:
        access_token:
          type: string
          description: The issued token itself (JWT, opaque string, etc).
        issued_token_type:
          type: string
          description: >
            The type of the issued token, e.g.
            urn:ietf:params:oauth:token-type:access_token
        token_type:
          type: string
          enum: [Bearer, N_A]
          description: >
            How to use the access token (usually "Bearer"). "N_A" if not applicable.
        expires_in:
          type: integer
          description: Time in seconds until the token expires.
        scope:
          type: string
          description: >
            The granted scope of the issued token. REQUIRED if it differs from the requested scope.
        refresh_token:
          type: string
          description: >
            Optional refresh token, if offline access is allowed.

    OAuthErrorResponse:
      type: object
      description: Standard OAuth 2.0 error response.
      properties:
        error:
          type: string
          description: Short error code (e.g., "invalid_request", "invalid_target").
        error_description:
          type: string
          description: Human-readable explanation of the error.

    Authorizer:
      type: object
      required:
        - phoneNumber
      properties:
        phoneNumber:
          $ref: "#/components/schemas/PhoneNumber"
    PhoneNumber:
      description: A single E.164 phone number.
      example: "+447823423420"
      type: string
      pattern: ^\+[1-9]\d{1,14}$

    EntryCode:
      description: A 5 digit PIN-like entry code that may be used by a user.
      example: "56734"
      type: string
      pattern: ^\d{5}$

    EntryCodeEntry:
      type: object
      required:
        - code
      properties:
        code:
          $ref: "#/components/schemas/EntryCode"

    CallboxSettings:
      description: >
        Settings object used by the callbox.
      type: object
      required:
        - authorizers
        - fallbackPhone
        - entryCodes
      properties:

        partyMode:
          description: >
            Whether the callbox is in party mode. In party mode, the callbox
            will not ask for a code and will immediately open the door.
          type: boolean

        authorizers:
          description: >
            A list of E.164 phone numbers. Authorizers are phone numbers that
            can be requested by the visitor â€” the callbox will then connect the
            authorizer who may press 9 at any time to approve visitor entry.
          type: array
          items:
            $ref: "#/components/schemas/Authorizer"

        fallbackPhone:
          description: >
            This number is called when the visitor does not request anything
            specific, or if the visitor fails to get in via some other method.

            It is a single E.164 phone number.

          $ref: "#/components/schemas/PhoneNumber"

        entryCodes:
          description: >
            A set of PIN-like numbers that may be used for immediate entry.
          type: array
          items:
            $ref: "#/components/schemas/EntryCodeEntry"


    Error:
      description: >
        Sent if an error occurs.
      type: object
      required:
        - cause
      properties:
        cause:
          type: string
          example: Too many concurrent requests.
    GetPhoneNumberResponse:
      description: >
        Object representing the current callbox phone number.
      type: object
      required:
        - phoneNumber
      properties:
        phoneNumber:
          $ref: "#/components/schemas/PhoneNumber"

paths:
  /token:
    post:
      summary: Token Exchange
      description: >
        Exchanges a security token (subject_token) for a new token, possibly
        with impersonation or delegation semantics. Conforms to RFC 8693.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenExchangeRequest'
      responses:
        '200':
          description: A token was successfully exchanged.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenExchangeResponse'
        '400':
          description: Invalid or unsupported token exchange request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthErrorResponse'
  /phone/init:
    get:
      parameters:
        - name: secret
          in: query
          description: Auth secret.
          required: true
          schema:
            type: string
      summary: Entry point for twilio callbox phone number.
      responses:
        "200":
          description: It worked ig.
          content:
            application/xml:
              schema:
                type: string
  /phone/handleEntry:
    get:
      parameters:
        - name: secret
          in: query
          description: Auth secret.
          required: true
          schema:
            type: string
        - name: Digits
          in: query
          description: digits entered by user.
          required: false
          schema:
            type: string
      summary: Handles entering an authorizer for the callbox phone number.
      responses:
        "200":
          description: It worked ig.
          content:
            application/xml:
              schema:
                type: string


  /phone/join-conference:
    post:
      summary: Join the Twilio conference as an authoriser.
      parameters:
        - name: secret
          in: query
          description: Auth secret.
          required: true
          schema:
            type: string
        - name: name
          in: query
          required: false
          description: The name of the Twilio conference to join.
          schema:
            type: string
      responses:
        "200":
          description: TwiML response placing the authoriser into the conference.
          content:
            application/xml:
              schema:
                type: string

  /phone/hold-music:
    post:
      summary: Plays ACNH music as hold music while caller waits.
      parameters:
        - name: secret
          in: query
          description: Auth secret.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: TwiML response that plays a looping audio track.
          content:
            application/xml:
              schema:
                type: string


  /callbox/settings:
    post:
      description: >
        Return the current callbox settings.
      security:
        - googleOIDC: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CallboxSettings"
      responses:
        "200":
          description: >
            Settings as synced with the backend.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallboxSettings'
        "500":
            description: Error.
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
    get:
      description: >
        Returns the current settings for the callbox.
      security:
        - googleOIDC: []
      responses:
        "500":
          description: >
            Something went wrong.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "200":
          description: >
            Returns a list of phone numbers representing users
            who are authorised to approve entry.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallboxSettings'
  /phone/number:
    get:
      summary: Returns the current phone number for the callbox.
      security:
        - googleOIDC: []
      responses:
        "200":
          description: It worked!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPhoneNumberResponse'
