openapi: 3.0.4
info:
  title: zemn.me API
  version: 0.0.0

servers:
  - url: https://api.zemn.me
    description: Production
  - url: http://api.staging.zemn.me
    description: Staging

components:
  securitySchemes:
    googleOIDC:
      type: openIdConnect
      # todo: own issuer!
      openIdConnectUrl: "https://accounts.google.com/.well-known/openid-configuration"
  schemas:
    IdToken:
      type: object
      description: >
        OpenID Connect **ID Token** claims set (the payload of a signed JWT).
        Conveys who issued the token, for whom (`aud`), which subject (`sub`),
        when it expires (`exp`) and was issued (`iat`), plus optional
        authentication context (e.g., `auth_time`, `acr`, `amr`) and
        flow-specific hashes (`at_hash`, `c_hash`). Must be **JWS-signed**;
        may be JWE-encrypted (sign **then** encrypt).
      required:
        - iss
        - sub
        - aud
        - exp
        - iat
      properties:
        iss:
          type: string
          format: uri
          description: >
            **Issuer Identifier** — HTTPS URL (case-sensitive) for the OP.
            Must exactly match the provider’s discovery `issuer`.
            **No query or fragment** allowed.
        sub:
          type: string
          maxLength: 255
          description: >
            **Subject Identifier** — locally unique, never reassigned.
            Case-sensitive string (≤255 ASCII). Uniqueness is guaranteed only
            by the pair (`iss`, `sub`).
        aud:
          description: >
            **Audience** — identifies recipients the token is intended for.
            Must include the RP’s OAuth `client_id`. Commonly a single string,
            but may be an array when multiple audiences are present.
          oneOf:
            - type: string
            - type: array
              items:
                type: string
              minItems: 1
              uniqueItems: true
        exp:
          type: integer
          format: int64
          description: >
            **Expiration time** (UTC seconds since 1970-01-01T00:00:00Z).
            Current time **must** be before `exp`. Small clock skew allowance is acceptable.
        iat:
          type: integer
          format: int64
          description: >
            **Issued-at time** (UTC seconds since epoch). RPs may reject tokens
            issued too far in the past to bound nonce storage and replay windows.
        auth_time:
          type: integer
          format: int64
          description: >
            **End-User authentication time** (UTC seconds). REQUIRED if the RP
            sent `max_age` or requested `auth_time` as an Essential Claim; otherwise OPTIONAL.
        nonce:
          type: string
          description: >
            **Nonce** to bind client session to the ID Token and mitigate replay.
            If the RP supplied a nonce in the auth request, this **must** be present
            and equal. OPs should not transform it.
        acr:
          type: string
          description: >
            **Authentication Context Class Reference.** String naming the assurance
            class satisfied (e.g., an absolute URI or a registered name).
            Interpreted by agreement between RP and OP.
        amr:
          type: array
          description: >
            **Authentication Methods References.** Identifiers for methods used
            (e.g., `pwd`, `otp`). Values should come from IANA AMR registry; unregistered
            values are allowed by agreement.
          items:
            type: string
        azp:
          type: string
          description: >
            **Authorized party.** If present, must equal the OAuth `client_id` to which
            this ID Token was issued. Typically occurs only with extensions.
        # Flow-dependent hashes (JWS 'alg' defines the hash function family)
        at_hash:
          type: string
          description: >
            **Access Token hash.** Base64url(left-most half of hash(ASCII(access_token))).
            REQUIRED when an Access Token is returned from the Authorization Endpoint
            (`response_type` includes `token`); OPTIONAL/omitted otherwise.
        c_hash:
          type: string
          description: >
            **Authorization Code hash.** Base64url(left-most half of hash(ASCII(code))).
            REQUIRED when an Authorization Code is returned from the Authorization Endpoint
            alongside an ID Token (Hybrid); OPTIONAL/omitted otherwise.
        # Common profile/user claims may appear here or be fetched from UserInfo:
        name:
          type: string
          description: End-User’s full display name.
        given_name:
          type: string
          description: End-User’s given/first name(s).
        family_name:
          type: string
          description: End-User’s surname(s).
        middle_name:
          type: string
          description: End-User’s middle name(s).
        nickname:
          type: string
          description: Casual name; may differ from `given_name`.
        preferred_username:
          type: string
          description: User’s preferred handle at the RP (not guaranteed unique).
        profile:
          type: string
          format: uri
          description: URL of the End-User’s profile page.
        picture:
          type: string
          format: uri
          description: URL of a profile **image** (direct image URL, not a page).
        website:
          type: string
          format: uri
          description: URL of the End-User’s website/blog.
        email:
          type: string
          description: Preferred email address (RFC 5322 `addr-spec`). Not guaranteed unique.
        email_verified:
          type: boolean
          description: >
            Whether the OP verified control of `email` at verification time (true/false).
        gender:
          type: string
          description: End-User’s gender (values often `female` / `male`; others allowed).
        birthdate:
          type: string
          description: >
            ISO 8601 date. Year may be `"0000"` to indicate omission; `YYYY` alone is allowed.
        zoneinfo:
          type: string
          description: IANA Time Zone (e.g., `Europe/Paris`, `America/Los_Angeles`).
        locale:
          type: string
          description: BCP 47 language tag (e.g., `en-GB`, `fr-CA`).
        phone_number:
          type: string
          description: Preferred phone number (E.164 recommended).
        phone_number_verified:
          type: boolean
          description: >
            Whether the OP verified control of `phone_number`. If true, number should be E.164.
        address:
          $ref: '#/components/schemas/Address'
        updated_at:
          type: integer
          format: int64
          description: >
            Seconds since epoch when End-User information was last updated.
        # Aggregated/Distributed Claims support:
        _claim_names:
          type: object
          additionalProperties:
            type: string
          description: >
            Maps claim names to source keys found in `_claim_sources` for aggregated/distributed claims.
        _claim_sources:
          type: object
          additionalProperties:
            oneOf:
              - type: object
                description: Aggregated claims (embedded as a JWT).
                properties:
                  JWT:
                    type: string
                    description: JWT carrying the aggregated claims.
                required: [JWT]
              - type: object
                description: Distributed claims (reference to an external endpoint).
                properties:
                  endpoint:
                    type: string
                    format: uri
                    description: OAuth 2.0 resource endpoint returning the claim(s) as a JWT.
                  access_token:
                    type: string
                    description: Bearer token to retrieve the distributed claims (optional).
                required: [endpoint]
      example:
        iss: "https://server.example.com"
        sub: "24400320"
        aud: "s6BhdRkqt3"
        exp: 1311281970
        iat: 1311280970
        nonce: "n-0S6_WzA2Mj"
        auth_time: 1311280969
        acr: "urn:mace:incommon:iap:silver"
        amr: ["pwd", "otp"]
        at_hash: "77QmUPtjPfzWtF2AnpK9RQ"
        c_hash: "LDktKdoQak3Pk0cnXxCltA"

    Address:
      type: object
      description: >
        Postal address claim. Providers may return only a subset. `formatted` may
        contain multiple lines (`\n` or `\r\n`).
      properties:
        formatted:
          type: string
          description: Full mailing address, formatted for display.
        street_address:
          type: string
          description: Street address (may include house number, PO Box; multi-line allowed).
        locality:
          type: string
          description: City / locality.
        region:
          type: string
          description: State / province / prefecture / region.
        postal_code:
          type: string
          description: ZIP / postal code.
        country:
          type: string
          description: Country name.
      example:
        formatted: "1234 Hollywood Blvd.\nLos Angeles, CA 90210\nUnited States"
        street_address: "1234 Hollywood Blvd."
        locality: "Los Angeles"
        region: "CA"
        postal_code: "90210"
        country: "United States"
    Link:
      type: object
      required: [rel, href]
      properties:
        rel:
          type: string
        href:
          type: string
          format: uri
    JRD:
      description: |
        JSON Resource Descriptor (JRD) as defined in [RFC 6415](https://datatracker.ietf.org/doc/html/rfc6415).
        Used for WebFinger discovery.
      type: object
      required: [subject, links]
      properties:
        subject:
          type: string
        links:
          type: array
          items: { $ref: '#/components/schemas/Link' }
    JWK:
      type: object
      required: [kty, alg, use, crv, x, y, kid]
      properties:
        kty:
          type: string
        alg:
          type: string
        use:
          type: string
        crv:
          type: string
        x:
          type: string
        y:
          type: string
        kid:
          type: string
    JWKS:
      type: object
      required: [keys]
      properties:
        keys:
          type: array
          items: { $ref: '#/components/schemas/JWK' }
    OIDCConfiguration:
      type: object
      description: |
        Subset of fields listed in spec §3.
        Feel free to extend locally: add extra properties without fear of
        breaking non-OIDC consumers, provided you preserve existing names.
      required:
        - issuer
        - authorization_endpoint
        - jwks_uri
        - response_types_supported
        - subject_types_supported
        - id_token_signing_alg_values_supported
      properties:
        issuer:
          type: string
          format: uri
          description: HTTPS URL; must match both discovery URL & ID-token `iss`.
        authorization_endpoint:
          type: string
          format: uri
        token_endpoint:
          type: string
          format: uri
          description: Required unless OP only supports Implicit flow.
        userinfo_endpoint:
          type: string
          format: uri
        jwks_uri:
          type: string
          format: uri
        registration_endpoint:
          type: string
          format: uri
        scopes_supported:
          type: array
          items: { type: string }
        response_types_supported:
          type: array
          items: { type: string }
        response_modes_supported:
          type: array
          items: { type: string }
        grant_types_supported:
          type: array
          items: { type: string }
        subject_types_supported:
          type: array
          items:
            type: string
            enum: [public, pairwise]
        acr_values_supported:
          type: array
          items: { type: string }
        id_token_signing_alg_values_supported:
          type: array
          items: { type: string }
        id_token_encryption_alg_values_supported:
          type: array
          items: { type: string }
        id_token_encryption_enc_values_supported:
          type: array
          items: { type: string }
        userinfo_signing_alg_values_supported:
          type: array
          items: { type: string }
        userinfo_encryption_alg_values_supported:
          type: array
          items: { type: string }
        userinfo_encryption_enc_values_supported:
          type: array
          items: { type: string }
        request_object_signing_alg_values_supported:
          type: array
          items: { type: string }
        request_object_encryption_alg_values_supported:
          type: array
          items: { type: string }
        request_object_encryption_enc_values_supported:
          type: array
          items: { type: string }
        token_endpoint_auth_methods_supported:
          type: array
          items:
            type: string
            enum: [client_secret_post, client_secret_basic, client_secret_jwt, private_key_jwt]
        token_endpoint_auth_signing_alg_values_supported:
          type: array
          items: { type: string }
        display_values_supported:
          type: array
          items: { type: string }
        claim_types_supported:
          type: array
          items:
            type: string
            enum: [normal, aggregated, distributed]
        claims_supported:
          type: array
          items: { type: string }
        claims_locales_supported:
          type: array
          items: { type: string }
        ui_locales_supported:
          type: array
          items: { type: string }
        claims_parameter_supported:
          type: boolean
        request_parameter_supported:
          type: boolean
        request_uri_parameter_supported:
          type: boolean
        require_request_uri_registration:
          type: boolean
        service_documentation:
          type: string
          format: uri
        op_policy_uri:
          type: string
          format: uri
        op_tos_uri:
          type: string
          format: uri
    TwilioCallRequest:
      type: object
      description: Parameters sent by Twilio in requests to your webhook for handling a call.
      properties:
        CallSid:
          type: string
          description: A unique identifier for this call, generated by Twilio.
        AccountSid:
          type: string
          pattern: '^AC[a-fA-F0-9]{32}$'
          description: Your Twilio account ID (34 characters, starting with 'AC').
        From:
          type: string
          description: >
            The initiator's phone number or client identifier. E.164 format (e.g., +16175551212) or client: scheme.
        To:
          type: string
          description: >
            The called party's phone number or client identifier. E.164 format or client: scheme.
        CallStatus:
          type: string
          enum: [queued, ringing, in-progress, completed, busy, failed, no-answer, canceled]
          description: The current status of the call.
        ApiVersion:
          type: string
          description: Twilio API version used for this call (e.g., 2010-04-01).
        Direction:
          type: string
          enum: [inbound, outbound-api, outbound-dial]
          description: The direction of the call.
        ForwardedFrom:
          type: string
          nullable: true
          description: The number from which the call was forwarded, if applicable.
        CallerName:
          type: string
          nullable: true
          description: >
            Caller ID name if VoiceCallerIdLookup is enabled on the number.
        ParentCallSid:
          type: string
          nullable: true
          description: Identifier for the parent call if this is a sub-call (e.g., leg of a call).
        CallToken:
          type: string
          nullable: true
          description: A token used for call forwarding, if applicable.
        FromCity:
          type: string
          nullable: true
          description: The city of the caller, if available.
        FromState:
          type: string
          nullable: true
          description: The state or province of the caller, if available.
        FromZip:
          type: string
          nullable: true
          description: The postal code of the caller, if available.
        FromCountry:
          type: string
          nullable: true
          description: The country of the caller, if available.
        ToCity:
          type: string
          nullable: true
          description: The city of the called party, if available.
        ToState:
          type: string
          nullable: true
          description: The state or province of the called party, if available.
        ToZip:
          type: string
          nullable: true
          description: The postal code of the called party, if available.
        ToCountry:
          type: string
          nullable: true
          description: The country of the called party, if available.
        Digits:
          type: string
          nullable: true
          description: digits entered by user.
      required:
        - CallSid
        - AccountSid
        - From
        - To
        - CallStatus
        - ApiVersion
        - Direction
    Authorizer:
      type: object
      required:
        - phoneNumber
      properties:
        phoneNumber:
          $ref: "#/components/schemas/PhoneNumber"
    PhoneNumber:
      description: A single E.164 phone number.
      example: "+447823423420"
      type: string
      pattern: ^\+[1-9]\d{1,14}$

    EntryCode:
      description: A 5 digit PIN-like entry code that may be used by a user.
      example: "56734"
      type: string
      pattern: ^\d{5}$

    EntryCodeEntry:
      type: object
      required:
        - code
      properties:
        code:
          $ref: "#/components/schemas/EntryCode"

    CallboxSettings:
      description: >
        Settings object used by the callbox.
      type: object
      required:
        - authorizers
        - fallbackPhone
        - entryCodes
      properties:

        partyMode:
          description: >
            Whether the callbox is in party mode. In party mode, the callbox
            will not ask for a code and will immediately open the door.
          type: boolean

        authorizers:
          description: >
            A list of E.164 phone numbers. Authorizers are phone numbers that
            can be requested by the visitor — the callbox will then connect the
            authorizer who may press 9 at any time to approve visitor entry.
          type: array
          items:
            $ref: "#/components/schemas/Authorizer"

        fallbackPhone:
          description: >
            This number is called when the visitor does not request anything
            specific, or if the visitor fails to get in via some other method.

            It is a single E.164 phone number.

          $ref: "#/components/schemas/PhoneNumber"

        entryCodes:
          description: >
            A set of PIN-like numbers that may be used for immediate entry.
          type: array
          items:
            $ref: "#/components/schemas/EntryCodeEntry"


    Error:
      description: >
        Sent if an error occurs.
      type: object
      required:
        - cause
      properties:
        cause:
          type: string
          example: Too many concurrent requests.
    GetPhoneNumberResponse:
      description: >
        Object representing the current callbox phone number.
      type: object
      required:
        - phoneNumber
      properties:
        phoneNumber:
          $ref: "#/components/schemas/PhoneNumber"

    Grievance:
      type: object
      required:
        - name
        - description
        - priority
        - created
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        priority:
          type: integer
          minimum: 1
          maximum: 10
        created:
          type: string
          format: date-time
    NewGrievance:
      type: object
      required:
        - name
        - description
        - priority
      properties:
        name:
          type: string
        description:
          type: string
        priority:
          type: integer
          minimum: 1
          maximum: 10

paths:
  /phone/init:
    POST:
      summary: Entry point for Twilio callbox phone number.
      parameters:
        - name: secret
          in: query
          description: Auth secret.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/TwilioCallRequest"
  /phone/handleEntry:
    get:
      parameters:
        - name: secret
          in: query
          description: Auth secret.
          required: true
          schema:
            type: string
        - name: Digits
          in: query
          description: digits entered by user.
          allowEmptyValue: true
          required: false
          schema:
            type: string
      summary: Handles entering an authorizer for the callbox phone number.
      responses:
        "200":
          description: It worked ig.
          content:
            application/xml:
              schema:
                type: string


  /phone/join-conference:
    post:
      summary: Join the Twilio conference as an authoriser.
      parameters:
        - name: secret
          in: query
          description: Auth secret.
          required: true
          schema:
            type: string
        - name: name
          in: query
          required: false
          description: The name of the Twilio conference to join.
          schema:
            type: string
        - name: attempt
          in: query
          required: false
          description: The call attempt number.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/TwilioCallRequest"
      responses:
        "200":
          description: TwiML response placing the authoriser into the conference.
          content:
            application/xml:
              schema:
                type: string

  /phone/hold-music:
    post:
      summary: Plays ACNH music as hold music while caller waits.
      parameters:
        - name: secret
          in: query
          description: Auth secret.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: TwiML response that plays a looping audio track.
          content:
            application/xml:
              schema:
                type: string


  /callbox/settings:
    post:
      description: >
        Return the current callbox settings.
      security:
        - googleOIDC: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CallboxSettings"
      responses:
        "200":
          description: >
            Settings as synced with the backend.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallboxSettings'
        "500":
            description: Error.
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
    get:
      description: >
        Returns the current settings for the callbox.
      security:
        - googleOIDC: []
      responses:
        "500":
          description: >
            Something went wrong.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "200":
          description: >
            Returns a list of phone numbers representing users
            who are authorised to approve entry.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallboxSettings'
  /phone/number:
    get:
      summary: Returns the current phone number for the callbox.
      security:
        - googleOIDC: []
      responses:
        "200":
          description: It worked!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPhoneNumberResponse'

  /grievances:
    get:
      security:
        - googleOIDC: []
      responses:
        "200":
          description: List grievances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grievance'
    post:
      security:
        - googleOIDC: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGrievance'
      responses:
        "200":
          description: Created grievance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grievance'

  /grievance/{id}:
    get:
      security:
        - googleOIDC: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A grievance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grievance'
    put:
      security:
        - googleOIDC: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGrievance'
      responses:
        "200":
          description: Updated grievance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grievance'
        "404":
          description: Not found
    delete:
      security:
        - googleOIDC: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Deleted
          content:
            application/json:
              schema:
                type: string

  /healthz:
    get:
      summary: Health check endpoint.
      description: >
        Returns a 200 OK response if the service is healthy.
      responses:
        "200":
          description: Service is healthy.
          content:
            application/json:
              schema:
                type: string
                enum: [OK]

  /.well-known/security.txt:
    get:
      summary: security.txt
      description: Security contact information.
      responses:
        "200":
          description: security.txt contents.
          content:
            text/plain:
              schema:
                type: string

  /security.txt:
    get:
      summary: security.txt
      description: Security contact information.
      responses:
        "200":
          description: security.txt contents.
          content:
            text/plain:
              schema:
                type: string

  /admin/uid:
    get:
      summary: Returns the caller's OIDC subject ID.
      security:
        - googleOIDC: []
      responses:
        "200":
          description: The subject identifier.
          content:
            text/plain:
              schema:
                type: string
  /.well-known/webfinger:
    get:
      tags: [Discovery]
      summary: WebFinger issuer discovery
      description: |
        Identifier-to-issuer lookup (spec §2).
        Safe to coexist with any other `/.well-known/*` handlers because
        the path and media-type are unique.
      operationId: getWebFinger
      parameters:
        - name: resource
          in: query
          required: true
          schema:
            type: string
          description: Normalised End-User identifier (URI or `acct:` form).
        - name: rel
          in: query
          required: false
          schema:
            type: string
            default: http://openid.net/specs/connect/1.0/issuer
          description: Relation type; leave at default for OIDC usage.
      responses:
        '200':
          description: JSON Resource Descriptor with at least one issuer link.
          content:
            application/jrd+json:
              schema:
                $ref: '#/components/schemas/JRD'
        default:
          description: Error (400/404 etc. depending on implementation policy).

  /.well-known/jwks.json:
    get:
      tags: [Discovery]
      summary: JSON Web Key Set
      operationId: getJWKS
      responses:
        '200':
          description: JSON Web Key Set.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWKS'
        default:
          description: Error.

  /.well-known/openid-configuration:
    get:
      tags: [Discovery]
      summary: OP configuration (root issuer)
      description: |
        Returned when `issuer` has no path component.
        If your main spec includes additional root-level `/.well-known`
        handlers, ensure they use distinct filenames.
      operationId: getOpenIDConnectRootConfiguration
      responses:
        '200':
          description: OpenID Provider metadata document.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OIDCConfiguration'
        default:
          description: Discovery failure.
