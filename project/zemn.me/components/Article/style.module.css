/*
	todo: please unwrap the elements here
	so they're not just :is and have their
	own classes. otherwise we're going to have
	complex child elements which break
*/


.container li {
	grid-column: 1 / -1;
}

/*
	the article grid, and
	elements which inherit
	the article grid.

	Since subgrid doesn't
	exist yet, we can have
	sub-elements which also
	are in the grid by having
	them state the same grid
	as the parent.
*/
.container, .container :is(article, blockquote, section, ol, ul, nav) {
	grid-column: 1 / -1;
	display: grid;
	grid-template-columns: 1.25em repeat(12, minmax(0, 4em)) 1.25em;
}


/*
	elements we need to defer to the regular
	model for
*/
.container :is(article, blockquote) > * {
	grid-column: 2 / span 12;
}

/*
	block level elements
*/
.container :is(p, h1, h2, h3, h4, h5, h6, time, hr, table, code) {
	grid-column: 2 / span 12;
}


/*
	full width elements
*/
.heroVideo, .container :is(img) {
	grid-column: 1 / -1;
	width: 100%;
	height: auto;
}


.container li {
	list-style: none
}
